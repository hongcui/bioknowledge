<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="description">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="statement"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="statement">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="relation"/>
          <xs:element ref="structure"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="text"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:ID"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="relation">
    <xs:annotation><xs:documentation>use @from and @to to indicate the two entities involved in a relation; 
      @name is the name of the relation; 
      to express a negation of the relation, set @negation "false"; 
      more modifier types other than geographic_modifier is expected to be added</xs:documentation> </xs:annotation>
    <xs:complexType>
      <xs:attribute name="from" use="required" type="xs:IDREF"/>
      <xs:attribute name="geographic_modifier" type="xs:string"/>
      <xs:attribute name="id" use="required" type="xs:ID"/>
      <xs:attribute name="name" use="required" type="xs:string"/>
      <xs:attribute name="negation" type="xs:boolean"/>
      <xs:attribute name="to" use="required" type="xs:IDREF"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="structure">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="character"/>
        <xs:element minOccurs="0" ref="text"/>
      </xs:sequence>
      <xs:attribute name="constraint" type="xs:string">
        <xs:annotation>
          <xs:documentation>for lacking a better name for the attribute, constraint is used to hold a subtype of the structure, for example cauline leaves, cauline is a constraint to the structure leaves</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="id" use="required" type="xs:ID"/>
      <xs:attribute name="name" use="required" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="character">
    <xs:complexType>
      <xs:attribute name="char_type" type="xs:string">
        <xs:annotation><xs:documentation>for indicating a range value or a simple value</xs:documentation></xs:annotation>
      </xs:attribute>
      <xs:attribute name="name" use="required" type="xs:string"/>
      <xs:attribute name="value" type="xs:string">
        <xs:annotation><xs:documentation>this attribute holds a simple value</xs:documentation></xs:annotation>
      </xs:attribute>
      <xs:attribute name="value_unit" type="xs:string">
        <xs:annotation><xs:documentation>the unit of a simple value</xs:documentation></xs:annotation>
      </xs:attribute>
      <xs:attribute name="from" type="xs:string">
        <xs:annotation><xs:documentation>@from is the lower bound in a range value, for example 1-3 flowers, or orange to red</xs:documentation></xs:annotation>
      </xs:attribute>
      <xs:attribute name="from_unit" type="xs:string">
        <xs:annotation><xs:documentation>the unit of a from-value of a range</xs:documentation></xs:annotation>
      </xs:attribute>
      <xs:attribute name="from_inclusive" type="xs:boolean">
        <xs:annotation><xs:documentation>to indicate if the named from-value is also a legal value in a range</xs:documentation></xs:annotation>
      </xs:attribute>
      <xs:attribute name="to" type="xs:string">
        <xs:annotation><xs:documentation>@to is the upper bound of a range value, for example 1-3 flowers, or orange to red</xs:documentation></xs:annotation>        
      </xs:attribute>
      <xs:attribute name="to_unit" type="xs:string">
        <xs:annotation><xs:documentation>the unit of a to-value of a range</xs:documentation></xs:annotation>
      </xs:attribute>
      <xs:attribute name="to_inclusive" type="xs:boolean">
        <xs:annotation><xs:documentation>to indicate if the named to-value is also a legal value in a range</xs:documentation></xs:annotation>
      </xs:attribute>
      <xs:attribute name="upper_restricted" type="xs:boolean">
        <xs:annotation><xs:documentation>to indicate if the to-value is a firm upper-bound. </xs:documentation></xs:annotation>
      </xs:attribute>
      <xs:attribute name="color_modifier" type="xs:string"/>
      <xs:attribute name="degree_modifier" type="xs:string"/>
      <xs:attribute name="frequency_modifier" type="xs:string"/>
      <xs:attribute name="quality_modifier" type="xs:string"/>
      
    </xs:complexType>
  </xs:element>
  <xs:element name="text" type="xs:string"/>
</xs:schema>
